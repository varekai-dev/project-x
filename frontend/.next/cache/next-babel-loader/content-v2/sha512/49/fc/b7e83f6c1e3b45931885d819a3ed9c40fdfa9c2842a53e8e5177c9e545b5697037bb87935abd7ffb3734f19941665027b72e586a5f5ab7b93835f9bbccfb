{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\varekai\\\\Documents\\\\GitHub\\\\project-x\\\\frontend\\\\components\\\\WebLayout\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport clsx from \"clsx\";\nimport { nav } from \"../navigation/navLinks\";\n\nfunction Header() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      show = _useState[0],\n      handleShow = _useState[1];\n\n  var _useState2 = useState(false),\n      menu = _useState2[0],\n      showMenu = _useState2[1];\n\n  var router = useRouter();\n\n  var handleMenu = function handleMenu() {\n    showMenu(!menu);\n  };\n\n  var transitionNavBar = function transitionNavBar() {\n    if (window.scrollY > 80) {\n      handleShow(true);\n    } else {\n      handleShow(false);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return function () {\n      window.removeEventListener(\"scroll\", transitionNavBar);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,700;0,900;1,400&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: clsx(\"header\", show && \"active\", menu && \"nav__btn--active\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__inner\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"logo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/logo.svg\",\n                alt: \"Logo\",\n                width: \"150px\",\n                height: \"50px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: clsx(\"nav__btn\", menu && \"active\"),\n            onClick: handleMenu,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"nav\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: clsx(\"nav__list\", menu && \"active\"),\n              children: nav.map(function (link) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(router.pathname == link.href && \"active\"),\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: link.href,\n                    children: link.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, _this)\n                }, link.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Header, \"ugbafMaYZ43oNp9vFLYqgjMH3gk=\", false, function () {\n  return [useRouter];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/varekai/Documents/GitHub/project-x/frontend/components/WebLayout/Header.jsx"],"names":["React","useState","useEffect","Head","Link","useRouter","clsx","nav","Header","show","handleShow","menu","showMenu","router","handleMenu","transitionNavBar","window","scrollY","addEventListener","removeEventListener","map","link","pathname","href","name","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport clsx from \"clsx\";\r\nimport { nav } from \"../navigation/navLinks\";\r\n\r\nfunction Header() {\r\n  const [show, handleShow] = useState(false);\r\n  const [menu, showMenu] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const handleMenu = () => {\r\n    showMenu(!menu);\r\n  };\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 80) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNavBar);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,700;0,900;1,400&display=swap\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n      </Head>\r\n      <header\r\n        className={clsx(\"header\", show && \"active\", menu && \"nav__btn--active\")}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"header__inner\">\r\n            <Link href=\"/\">\r\n              <a className=\"logo\">\r\n                <img src=\"/logo.svg\" alt=\"Logo\" width=\"150px\" height=\"50px\" />\r\n              </a>\r\n            </Link>\r\n            <div\r\n              className={clsx(\"nav__btn\", menu && \"active\")}\r\n              onClick={handleMenu}\r\n            >\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n            <nav className=\"nav\">\r\n              <ul className={clsx(\"nav__list\", menu && \"active\")}>\r\n                {nav.map((link) => (\r\n                  <li\r\n                    key={link.id}\r\n                    className={clsx(router.pathname == link.href && \"active\")}\r\n                  >\r\n                    <Link href={link.href}>{link.name}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}